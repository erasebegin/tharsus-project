{"ast":null,"code":"var _jsxFileName = \"/home/chris/MyRepos/react-projects/tharsus-interface/src/components/DataDisplay.js\";\nimport React from \"react\";\nimport MovementBar from \"./charts/MovementBar\";\nimport MovementStacked from \"./charts/MovementStacked\";\nimport DistributionDataDisplay from \"./DistributionDataDisplay\";\nimport \"../styles/DataDisplay.css\";\n\nclass DataDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const _this$props$apiData$s = this.props.apiData.site_hours,\n          site_hours = _this$props$apiData$s === void 0 ? {} : _this$props$apiData$s;\n    const _site_hours$inside = site_hours.inside,\n          inside = _site_hours$inside === void 0 ? 0 : _site_hours$inside,\n          _site_hours$outside = site_hours.outside,\n          outside = _site_hours$outside === void 0 ? 0 : _site_hours$outside;\n    const _this$props$apiData$m = this.props.apiData.moving_hours,\n          moving_hours = _this$props$apiData$m === void 0 ? {} : _this$props$apiData$m;\n    const _moving_hours$moving = moving_hours.moving,\n          moving = _moving_hours$moving === void 0 ? {} : _moving_hours$moving,\n          _moving_hours$station = moving_hours.stationary,\n          stationary = _moving_hours$station === void 0 ? 0 : _moving_hours$station;\n    const _moving$inside = moving.inside,\n          movingInside = _moving$inside === void 0 ? 0 : _moving$inside,\n          _moving$outside = moving.outside,\n          movingOutside = _moving$outside === void 0 ? 0 : _moving$outside;\n    const _this$props$apiData$w = this.props.apiData.workforce_distribution,\n          workforce_distribution = _this$props$apiData$w === void 0 ? {} : _this$props$apiData$w;\n    const _workforce_distributi = workforce_distribution[\"Top Box\"],\n          topBox = _workforce_distributi === void 0 ? 0 : _workforce_distributi,\n          _workforce_distributi2 = workforce_distribution.Firewall,\n          Firewall = _workforce_distributi2 === void 0 ? 0 : _workforce_distributi2,\n          _workforce_distributi3 = workforce_distribution.Subs,\n          Subs = _workforce_distributi3 === void 0 ? 0 : _workforce_distributi3,\n          _workforce_distributi4 = workforce_distribution.PCB,\n          PCB = _workforce_distributi4 === void 0 ? 0 : _workforce_distributi4,\n          _workforce_distributi5 = workforce_distribution[\"3D Build\"],\n          threeD = _workforce_distributi5 === void 0 ? 0 : _workforce_distributi5,\n          _workforce_distributi6 = workforce_distribution.FAT,\n          FAT = _workforce_distributi6 === void 0 ? 0 : _workforce_distributi6,\n          _workforce_distributi7 = workforce_distribution[\"Wake Up\"],\n          wakeUp = _workforce_distributi7 === void 0 ? 0 : _workforce_distributi7;\n    const _this$props$apiData$w2 = this.props.apiData.work_scatter_meters,\n          workScatterMeters = _this$props$apiData$w2 === void 0 ? 0 : _this$props$apiData$w2;\n    const _this$props$apiData$m2 = this.props.apiData.minues_in_area,\n          minues_in_area = _this$props$apiData$m2 === void 0 ? {} : _this$props$apiData$m2;\n    const _minues_in_area$Store = minues_in_area.Stores,\n          stores = _minues_in_area$Store === void 0 ? 0 : _minues_in_area$Store,\n          _minues_in_area$Goods = minues_in_area[\"Goods In\"],\n          goodsIn = _minues_in_area$Goods === void 0 ? 0 : _minues_in_area$Goods,\n          _minues_in_area$Quali = minues_in_area.Quality,\n          quality = _minues_in_area$Quali === void 0 ? 0 : _minues_in_area$Quali,\n          _minues_in_area$Inspe = minues_in_area.Inspection,\n          inspection = _minues_in_area$Inspe === void 0 ? 0 : _minues_in_area$Inspe;\n    console.log(\"work scatter meters: \", workScatterMeters);\n\n    if (this.props.NavState === \"movement\") {\n      return React.createElement(\"div\", {\n        className: \"chart-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(MovementBar, {\n        Title: \"Site Hours\",\n        Data: [inside, outside],\n        Labels: [\"inside\", \"outside\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(MovementStacked, {\n        Title: \"Moving Hours\",\n        Set1: [movingInside, movingOutside],\n        Set2: [stationary],\n        Labels: [\"moving\", \"stationary\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }));\n    } else if (this.props.NavState === \"overview\") {\n      return React.createElement(\"div\", {\n        className: (\"chart-container\", \"overview-container\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"overview-container-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(DistributionDataDisplay, {\n        Title: \"Movement\",\n        chartType: \"Pie\",\n        Labels: [\"inside\", \"outside\"],\n        Data: [movingInside, movingOutside],\n        Height: 300,\n        Width: 200,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(DistributionDataDisplay, {\n        Title: \"Minues in Area\",\n        chartType: \"Bar\",\n        Labels: [\"Stores\", \"Goods In\", \"Quality\", \"Inspection\"],\n        Data: [stores, goodsIn, quality, inspection],\n        Height: 200,\n        Width: 300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(DistributionDataDisplay, {\n        Title: \"Workforce Distribution\",\n        chartType: \"Bar\",\n        Labels: [\"Tob Box\", \"Firewall\", \"Subs\", \"PCB\", \"3D Build\", \"FAT\", \"Wake up\"],\n        Data: [topBox, Firewall, Subs, PCB, threeD, FAT, wakeUp],\n        Height: 400,\n        Width: 800,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }));\n    } else if (this.props.NavState === \"distribution\") {\n      return React.createElement(\"div\", {\n        className: \"distribution-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(DistributionDataDisplay, {\n        Title: \"Work Scatter Meters\",\n        chartType: \"HorizontalBar\",\n        Labels: [\"Work Scatter Meters\"],\n        Data: [workScatterMeters],\n        Height: 100,\n        Width: 900,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(DistributionDataDisplay, {\n        Title: \"Minues in Area\",\n        chartType: \"Bar\",\n        Labels: [\"Stores\", \"Goods In\", \"Quality\", \"Inspection\"],\n        Data: [stores, goodsIn, quality, inspection],\n        Height: 300,\n        Width: 900,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(DistributionDataDisplay, {\n        chartType: \"Bar\",\n        Labels: [\"Tob Box\", \"Firewall\", \"Subs\", \"PCB\", \"3D Build\", \"FAT\", \"Wake up\"],\n        Data: [topBox, Firewall, Subs, PCB, threeD, FAT, wakeUp],\n        Title: \"Workforce Distribution\",\n        Height: 300,\n        Width: 900,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default DataDisplay;","map":{"version":3,"sources":["/home/chris/MyRepos/react-projects/tharsus-interface/src/components/DataDisplay.js"],"names":["React","MovementBar","MovementStacked","DistributionDataDisplay","DataDisplay","Component","constructor","props","render","apiData","site_hours","inside","outside","moving_hours","moving","stationary","movingInside","movingOutside","workforce_distribution","topBox","Firewall","Subs","PCB","threeD","FAT","wakeUp","work_scatter_meters","workScatterMeters","minues_in_area","Stores","stores","goodsIn","Quality","quality","Inspection","inspection","console","log","NavState"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport MovementBar from \"./charts/MovementBar\";\nimport MovementStacked from \"./charts/MovementStacked\";\nimport DistributionDataDisplay from \"./DistributionDataDisplay\";\nimport \"../styles/DataDisplay.css\";\n\nclass DataDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      apiData: { site_hours = {} }\n    } = this.props;\n    const { inside = 0, outside = 0 } = site_hours;\n    const {\n      apiData: { moving_hours = {} }\n    } = this.props;\n    const { moving = {}, stationary = 0 } = moving_hours;\n    const { inside: movingInside = 0, outside: movingOutside = 0 } = moving;\n    const {\n      apiData: { workforce_distribution = {} }\n    } = this.props;\n    const {\n      \"Top Box\": topBox = 0,\n      Firewall = 0,\n      Subs = 0,\n      PCB = 0,\n      \"3D Build\": threeD = 0,\n      FAT = 0,\n      \"Wake Up\": wakeUp = 0\n    } = workforce_distribution;\n    const {\n      apiData: { work_scatter_meters: workScatterMeters = 0 }\n    } = this.props;\n    const {\n      apiData: { minues_in_area = {} }\n    } = this.props;\n    const {\n      Stores: stores = 0,\n      \"Goods In\": goodsIn = 0,\n      Quality: quality = 0,\n      Inspection: inspection = 0\n    } = minues_in_area;\n\n    console.log(\"work scatter meters: \", workScatterMeters);\n\n    if (this.props.NavState === \"movement\") {\n      return (\n        <div className=\"chart-container\">\n          <MovementBar\n            Title=\"Site Hours\"\n            Data={[inside, outside]}\n            Labels={[\"inside\", \"outside\"]}\n          />\n          <MovementStacked\n            Title=\"Moving Hours\"\n            Set1={[movingInside, movingOutside]}\n            Set2={[stationary]}\n            Labels={[\"moving\", \"stationary\"]}\n          />\n        </div>\n      );\n    }\n    else if (this.props.NavState === \"overview\") {\n      return (\n        <div className={(\"chart-container\", \"overview-container\")}>\n          <div className=\"overview-container-top\">\n          <DistributionDataDisplay\n            Title=\"Movement\"\n            chartType={\"Pie\"}\n            Labels={[\n              \"inside\",\n              \"outside\"\n            ]} \n            Data={[movingInside,movingOutside]}\n            Height={300}\n            Width={200}\n          />\n          <DistributionDataDisplay\n            Title=\"Minues in Area\"\n            chartType={\"Bar\"}\n            Labels={[\n              \"Stores\",\n              \"Goods In\",\n              \"Quality\",\n              \"Inspection\"\n            ]} \n            Data={[stores, goodsIn, quality, inspection]}\n            Height={200}\n            Width={300}\n          />\n          </div>\n          <DistributionDataDisplay\n            Title=\"Workforce Distribution\"\n            chartType={\"Bar\"}\n            Labels={[\n              \"Tob Box\",\n              \"Firewall\",\n              \"Subs\",\n              \"PCB\",\n              \"3D Build\",\n              \"FAT\",\n              \"Wake up\"\n            ]}\n            Data={[topBox, Firewall, Subs, PCB, threeD, FAT, wakeUp]}\n            Height={400}\n            Width={800}\n          />\n        </div>\n      );\n    } else if (this.props.NavState === \"distribution\") {\n      return (\n        <div className={\"distribution-container\"}>\n          <DistributionDataDisplay\n            Title=\"Work Scatter Meters\"\n            chartType={\"HorizontalBar\"}\n            Labels={[\"Work Scatter Meters\"]}\n            Data={[workScatterMeters]}\n            Height={100}\n            Width={900}\n          />\n          <DistributionDataDisplay\n            Title=\"Minues in Area\"\n            chartType={\"Bar\"}\n            Labels={[\n              \"Stores\",\n              \"Goods In\",\n              \"Quality\",\n              \"Inspection\"\n            ]} \n            Data={[stores, goodsIn, quality, inspection]}\n            Height={300}\n            Width={900}\n          />\n          <DistributionDataDisplay\n            chartType={\"Bar\"}\n            Labels={[\n              \"Tob Box\",\n              \"Firewall\",\n              \"Subs\",\n              \"PCB\",\n              \"3D Build\",\n              \"FAT\",\n              \"Wake up\"\n            ]}\n            Data={[topBox, Firewall, Subs, PCB, threeD, FAT, wakeUp]}\n            Title=\"Workforce Distribution\"\n            Height={300}\n            Width={900}\n          />\n        </div>\n      );\n    }\n  }\n}\n\nexport default DataDisplay;\n"]},"metadata":{},"sourceType":"module"}