{"ast":null,"code":"var _jsxFileName = \"/home/chris/MyRepos/react-projects/tharsus-interface/src/components/DataDisplay.js\";\nimport React from \"react\";\nimport MovementDataDisplay from \"./MovementDataDisplay\";\nimport OverviewDataDisplay from \"./OverviewDataDisplay\";\nimport DistributionDataDisplay from \"./DistributionDataDisplay\";\nimport \"../styles/DataDisplay.css\"; // const { moving_hours = {} } = data;\n// const { moving = {} } = moving_hours;\n// const { inside, outside } = moving;\n\nclass DataDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    console.log(\"from DataDisplay: \");\n    const _this$props$apiData$s = this.props.apiData.site_hours,\n          site_hours = _this$props$apiData$s === void 0 ? {} : _this$props$apiData$s;\n    const _site_hours$inside = site_hours.inside,\n          inside = _site_hours$inside === void 0 ? 0 : _site_hours$inside,\n          _site_hours$outside = site_hours.outside,\n          outside = _site_hours$outside === void 0 ? 0 : _site_hours$outside;\n    const _this$props$apiData$m = this.props.apiData.moving_hours,\n          moving_hours = _this$props$apiData$m === void 0 ? {} : _this$props$apiData$m;\n    const _moving_hours$moving = moving_hours.moving,\n          moving = _moving_hours$moving === void 0 ? {} : _moving_hours$moving,\n          _moving_hours$station = moving_hours.stationary,\n          stationary = _moving_hours$station === void 0 ? 0 : _moving_hours$station;\n    const _moving$inside = moving.inside,\n          movingInside = _moving$inside === void 0 ? 0 : _moving$inside,\n          _moving$outside = moving.outside,\n          movingOutside = _moving$outside === void 0 ? 0 : _moving$outside;\n    console.log(\"moving inside: \", movingInside, \"moving outside: \", movingOutside);\n    const _this$props$apiData$w = this.props.apiData.workforce_distribution,\n          workforce_distribution = _this$props$apiData$w === void 0 ? {} : _this$props$apiData$w;\n    const _workforce_distributi = workforce_distribution[\"Top Box\"],\n          topBox = _workforce_distributi === void 0 ? 0 : _workforce_distributi,\n          _workforce_distributi2 = workforce_distribution.Firewall,\n          Firewall = _workforce_distributi2 === void 0 ? 0 : _workforce_distributi2,\n          _workforce_distributi3 = workforce_distribution.Subs,\n          Subs = _workforce_distributi3 === void 0 ? 0 : _workforce_distributi3,\n          _workforce_distributi4 = workforce_distribution.PCB,\n          PCB = _workforce_distributi4 === void 0 ? 0 : _workforce_distributi4,\n          _workforce_distributi5 = workforce_distribution[\"3D Build\"],\n          threeD = _workforce_distributi5 === void 0 ? 0 : _workforce_distributi5,\n          _workforce_distributi6 = workforce_distribution.FAT,\n          FAT = _workforce_distributi6 === void 0 ? 0 : _workforce_distributi6,\n          _workforce_distributi7 = workforce_distribution[\"Wake Up\"],\n          wakeUp = _workforce_distributi7 === void 0 ? 0 : _workforce_distributi7;\n\n    if (this.props.NavState === \"movement\") {\n      return React.createElement(\"div\", {\n        className: \"chart-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(MovementDataDisplay, {\n        Set1: [inside, outside],\n        Title: \"Site Hours\",\n        Labels: [\"inside\", \"outside\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(MovementDataDisplay, {\n        Set1: [movingInside, movingOutside],\n        Set2: [stationary],\n        Title: \"Moving Hours\",\n        Labels: [\"inside\", \"outside\"],\n        Stacked: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    }\n\n    if (this.props.NavState === \"overview\") {\n      return React.createElement(\"div\", {\n        className: \"chart-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(OverviewDataDisplay, {\n        Set1: [3.3176110809420893, 4.18238891905791],\n        Title: \"Site Hours\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(OverviewDataDisplay, {\n        Set1: [3.9176110809420893, 4.18238891905791],\n        Set2: [8.3176110809420893, 1.18238891905791],\n        Title: \"Moving Hours\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }));\n    } else if (this.props.NavState === \"distribution\") {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(DistributionDataDisplay, {\n        chartType: \"Pie\",\n        Labels: [\"Tob Box\", \"Firewall\", \"Subs\", \"PCB\", \"3D Build\", \"FAT\", \"Wake up\"] //TODO: generate array of labels from object\n        ,\n        Data: [topBox, Firewall, Subs, PCB, threeD, FAT, wakeUp],\n        Title: \"Workforce Distribution\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(DistributionDataDisplay, {\n        chartType: \"Bar\",\n        Labels: [\"Tob Box\", \"Firewall\", \"Subs\", \"PCB\", \"3D Build\", \"FAT\", \"Wake up\"],\n        Data: [topBox, Firewall, Subs, PCB, threeD, FAT, wakeUp],\n        Title: \"Workforce Distribution\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default DataDisplay;","map":{"version":3,"sources":["/home/chris/MyRepos/react-projects/tharsus-interface/src/components/DataDisplay.js"],"names":["React","MovementDataDisplay","OverviewDataDisplay","DistributionDataDisplay","DataDisplay","Component","constructor","props","render","console","log","apiData","site_hours","inside","outside","moving_hours","moving","stationary","movingInside","movingOutside","workforce_distribution","topBox","Firewall","Subs","PCB","threeD","FAT","wakeUp","NavState"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport MovementDataDisplay from \"./MovementDataDisplay\";\nimport OverviewDataDisplay from \"./OverviewDataDisplay\";\nimport DistributionDataDisplay from \"./DistributionDataDisplay\";\nimport \"../styles/DataDisplay.css\"\n\n// const { moving_hours = {} } = data;\n// const { moving = {} } = moving_hours;\n// const { inside, outside } = moving;\n\nclass DataDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    console.log(\"from DataDisplay: \");\n    const {\n      apiData: { site_hours = {} }\n    } = this.props;\n    const { inside = 0, outside = 0 } = site_hours;\n    const {\n      apiData: { moving_hours = {} }\n    } = this.props;\n    const { moving = {}, stationary = 0 } = moving_hours;\n    const {inside:movingInside = 0, outside:movingOutside =0} = moving; \n    console.log(\"moving inside: \",movingInside,\"moving outside: \",movingOutside)\n    const {\n      apiData: { workforce_distribution = {} }\n    } = this.props;\n    const {\n      \"Top Box\": topBox = 0,\n      Firewall = 0,\n      Subs = 0,\n      PCB = 0,\n      \"3D Build\": threeD = 0,\n      FAT = 0,\n      \"Wake Up\": wakeUp = 0\n    } = workforce_distribution;\n\n    if (this.props.NavState === \"movement\") {\n      return (\n        <div className=\"chart-container\">\n          <MovementDataDisplay\n            Set1={[inside, outside]}\n            Title=\"Site Hours\"\n            Labels={[\"inside\", \"outside\"]}\n          />\n          <MovementDataDisplay\n            Set1={[movingInside, movingOutside]}\n            Set2={[stationary]}\n            Title=\"Moving Hours\"\n            Labels={[\"inside\", \"outside\"]}\n            Stacked={true}\n          />\n        </div>\n      );\n    }\n    if (this.props.NavState === \"overview\") {\n      return (\n        <div className=\"chart-container\">\n          <OverviewDataDisplay\n            Set1={[3.3176110809420893, 4.18238891905791]}\n            Title=\"Site Hours\"\n          />\n          <OverviewDataDisplay\n            Set1={[3.9176110809420893, 4.18238891905791]}\n            Set2={[8.3176110809420893, 1.18238891905791]}\n            Title=\"Moving Hours\"\n          />\n        </div>\n      );\n    } else if (this.props.NavState === \"distribution\") {\n      return (\n        <div>\n          <DistributionDataDisplay\n            chartType={\"Pie\"}\n            Labels={[\n              \"Tob Box\",\n              \"Firewall\",\n              \"Subs\",\n              \"PCB\",\n              \"3D Build\",\n              \"FAT\",\n              \"Wake up\"\n            ]} //TODO: generate array of labels from object\n            Data={[topBox, Firewall, Subs, PCB, threeD, FAT, wakeUp]}\n            Title=\"Workforce Distribution\"\n          />\n          <DistributionDataDisplay\n            chartType={\"Bar\"}\n            Labels={[\n              \"Tob Box\",\n              \"Firewall\",\n              \"Subs\",\n              \"PCB\",\n              \"3D Build\",\n              \"FAT\",\n              \"Wake up\"\n            ]}\n            Data={[topBox, Firewall, Subs, PCB, threeD, FAT, wakeUp]}\n            Title=\"Workforce Distribution\"\n          />\n        </div>\n      );\n    }\n  }\n}\n\nexport default DataDisplay;\n"]},"metadata":{},"sourceType":"module"}