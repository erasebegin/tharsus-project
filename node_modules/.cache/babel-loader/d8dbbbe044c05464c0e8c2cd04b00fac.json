{"ast":null,"code":"var _jsxFileName = \"/home/chris/MyRepos/react-projects/tharsus-interface/src/components/DistributionDataDisplay.js\";\nimport React from \"react\";\nimport { HorizontalBar, Pie, Bar } from \"react-chartjs-2\";\n\nclass DistributionDataDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    if (this.props.chartType === \"Bar\") {\n      return React.createElement(\"div\", {\n        className: \"bar-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(Bar, {\n        data: {\n          labels: this.props.Labels,\n          datasets: [{\n            data: this.props.Data,\n            backgroundColor: [\"rgb(255, 100, 183)\"]\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          responsive: true,\n          title: {\n            display: true,\n            text: this.props.Title,\n            fontSize: 25\n          },\n          legend: {\n            display: false\n          }\n        },\n        height: 300,\n        width: 900,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }));\n    } else if (this.props.chartType === \"Pie\") {\n      return React.createElement(\"div\", {\n        className: \"bar-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Pie, {\n        data: {\n          labels: this.props.Labels,\n          datasets: [{\n            data: this.props.Data,\n            backgroundColor: [\"rgb(255, 100, 183)\"]\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          responsive: true,\n          title: {\n            display: true,\n            text: this.props.Title,\n            fontSize: 25\n          },\n          legend: {\n            display: false\n          }\n        },\n        height: 300,\n        width: 900,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    } else if (this.props.chartType === \"HorizontalBar\") {\n      return React.createElement(\"div\", {\n        className: \"bar-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Pie, {\n        data: {\n          labels: this.props.Labels,\n          datasets: [{\n            data: this.props.Data,\n            backgroundColor: [\"rgb(255, 100, 183)\"]\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          responsive: true,\n          title: {\n            display: true,\n            text: this.props.Title,\n            fontSize: 25\n          },\n          legend: {\n            display: false\n          }\n        },\n        height: 300,\n        width: 900,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default DistributionDataDisplay;","map":{"version":3,"sources":["/home/chris/MyRepos/react-projects/tharsus-interface/src/components/DistributionDataDisplay.js"],"names":["React","HorizontalBar","Pie","Bar","DistributionDataDisplay","Component","constructor","props","render","chartType","labels","Labels","datasets","data","Data","backgroundColor","maintainAspectRatio","responsive","title","display","text","Title","fontSize","legend"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { HorizontalBar, Pie, Bar } from \"react-chartjs-2\";\n\nclass DistributionDataDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    if (this.props.chartType === \"Bar\") {\n      return (\n        <div className=\"bar-container\">\n          <Bar\n            data={{\n              labels: this.props.Labels,\n              datasets: [\n                {\n                  data: this.props.Data,\n                  backgroundColor: [\"rgb(255, 100, 183)\"]\n                }\n              ]\n            }}\n            options={{\n              maintainAspectRatio: false,\n              responsive: true,\n              title: {\n                display: true,\n                text: this.props.Title,\n                fontSize: 25\n              },\n              legend: { display: false }\n            }}\n            height={300}\n            width={900}\n          />\n        </div>\n      );\n    } else if (this.props.chartType === \"Pie\") {\n      return (\n        <div className=\"bar-container\">\n          <Pie\n            data={{\n              labels: this.props.Labels,\n              datasets: [\n                {\n                  data: this.props.Data,\n                  backgroundColor: [\"rgb(255, 100, 183)\"]\n                }\n              ]\n            }}\n            options={{\n              maintainAspectRatio: false,\n              responsive: true,\n              title: {\n                display: true,\n                text: this.props.Title,\n                fontSize: 25\n              },\n              legend: { display: false }\n            }}\n            height={300}\n            width={900}\n          />\n        </div>\n      )} else if (this.props.chartType === \"HorizontalBar\") {\n        return (\n          <div className=\"bar-container\">\n            <Pie\n              data={{\n                labels: this.props.Labels,\n                datasets: [\n                  {\n                    data: this.props.Data,\n                    backgroundColor: [\"rgb(255, 100, 183)\"]\n                  }\n                ]\n              }}\n              options={{\n                maintainAspectRatio: false,\n                responsive: true,\n                title: {\n                  display: true,\n                  text: this.props.Title,\n                  fontSize: 25\n                },\n                legend: { display: false }\n              }}\n              height={300}\n              width={900}\n            />\n          </div>\n        );\n            }\n  }\n}\n\nexport default DistributionDataDisplay;\n"]},"metadata":{},"sourceType":"module"}